{"ast":null,"code":"// // // // const initialState = {\n// // // //   petList: [],\n// // // // };\n\n// // // // const petReducer = (state = initialState, action) => {\n// // // //   switch (action.type) {\n// // // //     case \"ADD_PET\":\n// // // //       return {\n// // // //         ...state,\n// // // //         petList: [...state.petList, action.payload],\n// // // //       };\n// // // //     case \"ADD_PET_LIST\":\n// // // //       return {\n// // // //         ...state,\n// // // //         petList: action.payload,\n// // // //       };\n// // // //     default:\n// // // //       return state;\n// // // //   }\n// // // // };\n\n// // // // export default petReducer;\n// // const initialState = {\n// //   petList: [],\n// // };\n\n// // const petReducer = (state = initialState, action) => {\n// //   switch (action.type) {\n// //     case \"ADD_PET\":\n// //       return {\n// //         ...state,\n// //         petList: [...state.petList, action.payload],\n// //       };\n// //     // case \"ADD_PET_LIST\":\n// //     //   return {\n// //     //     ...state,\n// //     //     petList: state.petList.map((pet) => {\n// //     //       if (pet.petId === action.payload.petId) {\n// //     //         return { ...pet, vaccinationList: action.payload.vaccinationList };\n// //     //       }\n// //     //       return pet;\n// //     //     }),\n// //     //   };\n// //     case \"ADD_PET_LIST\":\n// //       return {\n// //         ...state,\n// //         petList: state.petList.map((pet) => {\n// //           if (pet.petId === action.payload.petId) {\n// //             return {\n// //               ...pet,\n// //               listVaccination: action.payload.listVaccination,\n// //             };\n// //           }\n// //           return pet;\n// //         }),\n// //       };\n\n// //     case \"ADD_VACCINATION\":\n// //       return {\n// //         ...state,\n// //         petList: state.petList.map((pet) => {\n// //           if (pet.petId === action.payload.petId) {\n// //             const updatedVaccinationList = [\n// //               ...pet.vaccinationList,\n// //               action.payload.vaccination,\n// //             ];\n// //             return { ...pet, vaccinationList: updatedVaccinationList };\n// //           }\n// //           return pet;\n// //         }),\n// //       };\n// //     default:\n// //       return state;\n// //   }\n// // };\n\n// // export default petReducer;\n\n// const initialState = {\n//   petList: [],\n// };\n\n// const petReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"ADD_PET\":\n//       const newPet = { ...action.payload, listVaccination: [] };\n//       return {\n//         ...state,\n//         petList: [...state.petList, newPet],\n//       };\n//     case \"ADD_PET_LIST\":\n//       return {\n//         ...state,\n//         petList: state.petList.map((pet) => {\n//           if (pet.petId === action.payload.petId) {\n//             return {\n//               ...pet,\n//               listVaccination: action.payload.listVaccination,\n//             };\n//           } else {\n//             return pet;\n//           }\n//         }),\n//       };\n//     case \"ADD_VACCINATION\":\n//       return {\n//         ...state,\n//         petList: state.petList.map((pet) => {\n//           if (pet.petId === action.payload.petId) {\n//             const updatedVaccinationList = [\n//               ...pet.vaccinationList,\n//               action.payload.vaccination,\n//             ];\n//             return { ...pet, vaccinationList: updatedVaccinationList };\n//           } else {\n//             return pet;\n//           }\n//         }),\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default petReducer;\n\nconst initialState = {\n  petList: []\n};\nconst petReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADD_PET\":\n      const newPet = {\n        ...action.payload,\n        listVaccination: []\n      };\n      return {\n        ...state,\n        petList: [...state.petList, newPet]\n      };\n    case \"ADD_PET_LIST\":\n      return {\n        ...state,\n        petList: state.petList.map(pet => {\n          if (pet.petId === action.payload.petId) {\n            return {\n              ...pet,\n              listVaccination: action.payload.listVaccination\n            };\n          } else {\n            return pet;\n          }\n        })\n      };\n    case \"ADD_VACCINATION\":\n      return {\n        ...state,\n        petList: state.petList.map(pet => {\n          if (pet.petId === action.payload.petId) {\n            const updatedVaccinationList = [...pet.vaccinationList, action.payload.vaccination];\n            return {\n              ...pet,\n              vaccinationList: updatedVaccinationList\n            };\n          } else {\n            return pet;\n          }\n        })\n      };\n    default:\n      return state;\n  }\n};\nexport default petReducer;","map":{"version":3,"names":["initialState","petList","petReducer","state","arguments","length","undefined","action","type","newPet","payload","listVaccination","map","pet","petId","updatedVaccinationList","vaccinationList","vaccination"],"sources":["/Users/vule/Documents/PETSAFE/PetSafe/front-end/src/store/petReducer.js"],"sourcesContent":["// // // // const initialState = {\n// // // //   petList: [],\n// // // // };\n\n// // // // const petReducer = (state = initialState, action) => {\n// // // //   switch (action.type) {\n// // // //     case \"ADD_PET\":\n// // // //       return {\n// // // //         ...state,\n// // // //         petList: [...state.petList, action.payload],\n// // // //       };\n// // // //     case \"ADD_PET_LIST\":\n// // // //       return {\n// // // //         ...state,\n// // // //         petList: action.payload,\n// // // //       };\n// // // //     default:\n// // // //       return state;\n// // // //   }\n// // // // };\n\n// // // // export default petReducer;\n// // const initialState = {\n// //   petList: [],\n// // };\n\n// // const petReducer = (state = initialState, action) => {\n// //   switch (action.type) {\n// //     case \"ADD_PET\":\n// //       return {\n// //         ...state,\n// //         petList: [...state.petList, action.payload],\n// //       };\n// //     // case \"ADD_PET_LIST\":\n// //     //   return {\n// //     //     ...state,\n// //     //     petList: state.petList.map((pet) => {\n// //     //       if (pet.petId === action.payload.petId) {\n// //     //         return { ...pet, vaccinationList: action.payload.vaccinationList };\n// //     //       }\n// //     //       return pet;\n// //     //     }),\n// //     //   };\n// //     case \"ADD_PET_LIST\":\n// //       return {\n// //         ...state,\n// //         petList: state.petList.map((pet) => {\n// //           if (pet.petId === action.payload.petId) {\n// //             return {\n// //               ...pet,\n// //               listVaccination: action.payload.listVaccination,\n// //             };\n// //           }\n// //           return pet;\n// //         }),\n// //       };\n\n// //     case \"ADD_VACCINATION\":\n// //       return {\n// //         ...state,\n// //         petList: state.petList.map((pet) => {\n// //           if (pet.petId === action.payload.petId) {\n// //             const updatedVaccinationList = [\n// //               ...pet.vaccinationList,\n// //               action.payload.vaccination,\n// //             ];\n// //             return { ...pet, vaccinationList: updatedVaccinationList };\n// //           }\n// //           return pet;\n// //         }),\n// //       };\n// //     default:\n// //       return state;\n// //   }\n// // };\n\n// // export default petReducer;\n\n// const initialState = {\n//   petList: [],\n// };\n\n// const petReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"ADD_PET\":\n//       const newPet = { ...action.payload, listVaccination: [] };\n//       return {\n//         ...state,\n//         petList: [...state.petList, newPet],\n//       };\n//     case \"ADD_PET_LIST\":\n//       return {\n//         ...state,\n//         petList: state.petList.map((pet) => {\n//           if (pet.petId === action.payload.petId) {\n//             return {\n//               ...pet,\n//               listVaccination: action.payload.listVaccination,\n//             };\n//           } else {\n//             return pet;\n//           }\n//         }),\n//       };\n//     case \"ADD_VACCINATION\":\n//       return {\n//         ...state,\n//         petList: state.petList.map((pet) => {\n//           if (pet.petId === action.payload.petId) {\n//             const updatedVaccinationList = [\n//               ...pet.vaccinationList,\n//               action.payload.vaccination,\n//             ];\n//             return { ...pet, vaccinationList: updatedVaccinationList };\n//           } else {\n//             return pet;\n//           }\n//         }),\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default petReducer;\n\nconst initialState = {\n  petList: [],\n};\n\nconst petReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_PET\":\n      const newPet = { ...action.payload, listVaccination: [] };\n      return {\n        ...state,\n        petList: [...state.petList, newPet],\n      };\n    case \"ADD_PET_LIST\":\n      return {\n        ...state,\n        petList: state.petList.map((pet) => {\n          if (pet.petId === action.payload.petId) {\n            return {\n              ...pet,\n              listVaccination: action.payload.listVaccination,\n            };\n          } else {\n            return pet;\n          }\n        }),\n      };\n    case \"ADD_VACCINATION\":\n      return {\n        ...state,\n        petList: state.petList.map((pet) => {\n          if (pet.petId === action.payload.petId) {\n            const updatedVaccinationList = [\n              ...pet.vaccinationList,\n              action.payload.vaccination,\n            ];\n            return { ...pet, vaccinationList: updatedVaccinationList };\n          } else {\n            return pet;\n          }\n        }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default petReducer;\n"],"mappingsnBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,UAAU,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC9C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,MAAMC,MAAM,GAAG;QAAE,GAAGF,MAAM,CAACG,OAAO;QAAEC,eAAe,EAAE;MAAG,CAAC;MACzD,OAAO;QACL,GAAGR,KAAK;QACRF,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAO,EAAEQ,MAAM;MACpC,CAAC;IACH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGN,KAAK;QACRF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACW,GAAG,CAAEC,GAAG,IAAK;UAClC,IAAIA,GAAG,CAACC,KAAK,KAAKP,MAAM,CAACG,OAAO,CAACI,KAAK,EAAE;YACtC,OAAO;cACL,GAAGD,GAAG;cACNF,eAAe,EAAEJ,MAAM,CAACG,OAAO,CAACC;YAClC,CAAC;UACH,CAAC,MAAM;YACL,OAAOE,GAAG;UACZ;QACF,CAAC;MACH,CAAC;IACH,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGV,KAAK;QACRF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACW,GAAG,CAAEC,GAAG,IAAK;UAClC,IAAIA,GAAG,CAACC,KAAK,KAAKP,MAAM,CAACG,OAAO,CAACI,KAAK,EAAE;YACtC,MAAMC,sBAAsB,GAAG,CAC7B,GAAGF,GAAG,CAACG,eAAe,EACtBT,MAAM,CAACG,OAAO,CAACO,WAAW,CAC3B;YACD,OAAO;cAAE,GAAGJ,GAAG;cAAEG,eAAe,EAAED;YAAuB,CAAC;UAC5D,CAAC,MAAM;YACL,OAAOF,GAAG;UACZ;QACF,CAAC;MACH,CAAC;IACH;MACE,OAAOV,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
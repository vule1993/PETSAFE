{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import{combineReducers,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";//is used to pipeline the dispatched objects and give us a feeling of sync execution by being async\nvar rootReducer=combineReducers({});var logger=function logger(){return function(next){return function(action){console.log(\"action logger store \",action);next(action);};};};export default configureStore({reducer:rootReducer},{},//initial state if we want to set from store instead of reducer\napplyMiddleware(thunk,logger));","map":{"version":3,"names":["configureStore","combineReducers","applyMiddleware","thunk","rootReducer","logger","next","action","console","log","reducer"],"sources":["/Users/vule/Documents/PETSAFE/PetSafe/front-end/src/store/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"; //is used to pipeline the dispatched objects and give us a feeling of sync execution by being async\n\nconst rootReducer = combineReducers({});\nconst logger = () => (next) => (action) => {\n  console.log(\"action logger store \", action);\n  next(action);\n};\nexport default configureStore(\n  { reducer: rootReducer },\n  {}, //initial state if we want to set from store instead of reducer\n  applyMiddleware(thunk, logger)\n);\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OAASC,eAAe,CAAEC,eAAe,KAAQ,OAAO,CACxD,MAAO,CAAAC,KAAK,KAAM,aAAa,CAAE;AAEjC,GAAM,CAAAC,WAAW,CAAGH,eAAe,CAAC,CAAC,CAAC,CAAC,CACvC,GAAM,CAAAI,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,QAAS,UAACC,IAAI,QAAK,UAACC,MAAM,CAAK,CACzCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEF,MAAM,CAAC,CAC3CD,IAAI,CAACC,MAAM,CAAC,CACd,CAAC,KACD,cAAe,CAAAP,cAAc,CAC3B,CAAEU,OAAO,CAAEN,WAAY,CAAC,CACxB,CAAC,CAAC,CAAE;AACJF,eAAe,CAACC,KAAK,CAAEE,MAAM,CAAC,CAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
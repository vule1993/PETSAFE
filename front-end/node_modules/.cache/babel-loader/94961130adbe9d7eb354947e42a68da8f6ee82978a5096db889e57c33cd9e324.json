{"ast":null,"code":"var _jsxFileName = \"/Users/vule/Documents/PETSAFE/PetSafe/front-end/src/app/Components/User/PetProfile.js\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\n// import React, { useState } from \"react\";\n// import { Card, Button, Row, Col } from \"react-bootstrap\";\n// import { useNavigate, Link } from \"react-router-dom\";\n\n// const PetProfile = ({ pets, userId }) => {\n//   const navigate = useNavigate();\n//   const [petList, setPetList] = useState(pets);\n\n//   const handleAddPet = () => {\n//     navigate({\n//       pathname: \"/addPet\",\n//     });\n//   };\n\n//   const handleDeletePet = async ([petId, petName]) => {\n//     try {\n//       await axios.delete(`http://localhost:8080/deletePet/${petId}`);\n//       alert(`Successfully delete ${petName} from your pet list`);\n//       const updatedPetList = petList.filter((pet) => pet.petId !== petId);\n//       setPetList(updatedPetList);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   const handleFindFood = async ([petType, petAge, petWeight]) => {};\n//   const petCards = petList.map((pet, index) => (\n//     <Col md={6} key={index} style={{ marginBottom: \"1rem\" }}>\n//       <Card style={{ height: \"100%\" }}>\n//         <Card.Img variant=\"top\" src={pet.petImage} />\n//         <Card.Body>\n//           <Card.Title>{pet.petName}</Card.Title>\n//           <Card.Text>Breed: {pet.petType}</Card.Text>\n//           <Card.Text>Age: {pet.petAge}</Card.Text>\n//           <Card.Text>Weight: {pet.petWeight} lbs</Card.Text>\n//           <Link\n//             className=\"btn btn-primary\"\n//             to=\"/updatePetProfile\"\n//             state={{ petDetail: pet }}\n//           >\n//             Details\n//           </Link>\n//           <Button\n//             className=\"btn btn-secondary mx-2\"\n//             onClick={() =>\n//               handleFindFood([pet.petType, pet.petAge, pet.petWeight])\n//             }\n//           >\n//             Find Food\n//           </Button>\n//           <Button\n//             className=\"btn btn-danger m-2\"\n//             onClick={() => handleDeletePet([pet.petId, pet.petName])}\n//           >\n//             Delete\n//           </Button>\n//         </Card.Body>\n//       </Card>\n//     </Col>\n//   ));\n\n//   const petCardRows = [];\n//   for (let i = 0; i < petCards.length; i += 2) {\n//     const cardRow = (\n//       <Row key={i / 2} style={{ marginBottom: \"1rem\" }}>\n//         {petCards.slice(i, i + 2)}\n//       </Row>\n//     );\n//     petCardRows.push(cardRow);\n//   }\n\n//   return (\n//     <div>\n//       <h4>Your Pets</h4>\n//       <hr />\n//       {petCardRows}\n//       <Button onClick={handleAddPet}>Add Pet</Button>\n//     </div>\n//   );\n// };\n\n// export default PetProfile;\n\nimport React, { useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport PetCard from \"./PetCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetProfile = _ref => {\n  _s();\n  let {\n    pets,\n    userId\n  } = _ref;\n  const navigate = useNavigate();\n  const [petList, setPetList] = useState(pets);\n  const handleAddPet = () => {\n    navigate({\n      pathname: \"/addPet\"\n    });\n  };\n  const handleDeletePet = petId => {\n    const updatedPetList = petList.filter(pet => pet.petId !== petId);\n    setPetList(updatedPetList);\n  };\n  const handleFindFood = pet => {\n    // handle finding food for pet\n  };\n  const petCards = petList.map((pet, index) => /*#__PURE__*/_jsxDEV(Col, {\n    md: 6,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(PetCard, {\n      pet: pet,\n      handleDeletePet: handleDeletePet,\n      handleFindFood: handleFindFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this));\n  const petCardRows = [];\n  for (let i = 0; i < petCards.length; i += 2) {\n    const cardRow = /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: petCards.slice(i, i + 2)\n    }, i / 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n    petCardRows.push(cardRow);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your Pets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), petCardRows, /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAddPet,\n      children: \"Add Pet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(PetProfile, \"uugfcp/Z8NgoBmz2VokmycKPR0k=\", false, function () {\n  return [useNavigate];\n});\n_c = PetProfile;\nexport default PetProfile;\nvar _c;\n$RefreshReg$(_c, \"PetProfile\");","map":{"version":3,"names":["React","useState","Button","Row","Col","useNavigate","PetCard","jsxDEV","_jsxDEV","PetProfile","_ref","_s","pets","userId","navigate","petList","setPetList","handleAddPet","pathname","handleDeletePet","petId","updatedPetList","filter","pet","handleFindFood","petCards","map","index","md","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","petCardRows","i","length","cardRow","slice","push","onClick","_c","$RefreshReg$"],"sources":["/Users/vule/Documents/PETSAFE/PetSafe/front-end/src/app/Components/User/PetProfile.js"],"sourcesContent":["// import axios from \"axios\";\n// import React, { useState } from \"react\";\n// import { Card, Button, Row, Col } from \"react-bootstrap\";\n// import { useNavigate, Link } from \"react-router-dom\";\n\n// const PetProfile = ({ pets, userId }) => {\n//   const navigate = useNavigate();\n//   const [petList, setPetList] = useState(pets);\n\n//   const handleAddPet = () => {\n//     navigate({\n//       pathname: \"/addPet\",\n//     });\n//   };\n\n//   const handleDeletePet = async ([petId, petName]) => {\n//     try {\n//       await axios.delete(`http://localhost:8080/deletePet/${petId}`);\n//       alert(`Successfully delete ${petName} from your pet list`);\n//       const updatedPetList = petList.filter((pet) => pet.petId !== petId);\n//       setPetList(updatedPetList);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   const handleFindFood = async ([petType, petAge, petWeight]) => {};\n//   const petCards = petList.map((pet, index) => (\n//     <Col md={6} key={index} style={{ marginBottom: \"1rem\" }}>\n//       <Card style={{ height: \"100%\" }}>\n//         <Card.Img variant=\"top\" src={pet.petImage} />\n//         <Card.Body>\n//           <Card.Title>{pet.petName}</Card.Title>\n//           <Card.Text>Breed: {pet.petType}</Card.Text>\n//           <Card.Text>Age: {pet.petAge}</Card.Text>\n//           <Card.Text>Weight: {pet.petWeight} lbs</Card.Text>\n//           <Link\n//             className=\"btn btn-primary\"\n//             to=\"/updatePetProfile\"\n//             state={{ petDetail: pet }}\n//           >\n//             Details\n//           </Link>\n//           <Button\n//             className=\"btn btn-secondary mx-2\"\n//             onClick={() =>\n//               handleFindFood([pet.petType, pet.petAge, pet.petWeight])\n//             }\n//           >\n//             Find Food\n//           </Button>\n//           <Button\n//             className=\"btn btn-danger m-2\"\n//             onClick={() => handleDeletePet([pet.petId, pet.petName])}\n//           >\n//             Delete\n//           </Button>\n//         </Card.Body>\n//       </Card>\n//     </Col>\n//   ));\n\n//   const petCardRows = [];\n//   for (let i = 0; i < petCards.length; i += 2) {\n//     const cardRow = (\n//       <Row key={i / 2} style={{ marginBottom: \"1rem\" }}>\n//         {petCards.slice(i, i + 2)}\n//       </Row>\n//     );\n//     petCardRows.push(cardRow);\n//   }\n\n//   return (\n//     <div>\n//       <h4>Your Pets</h4>\n//       <hr />\n//       {petCardRows}\n//       <Button onClick={handleAddPet}>Add Pet</Button>\n//     </div>\n//   );\n// };\n\n// export default PetProfile;\n\nimport React, { useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport PetCard from \"./PetCard\";\n\nconst PetProfile = ({ pets, userId }) => {\n  const navigate = useNavigate();\n  const [petList, setPetList] = useState(pets);\n\n  const handleAddPet = () => {\n    navigate({\n      pathname: \"/addPet\",\n    });\n  };\n\n  const handleDeletePet = (petId) => {\n    const updatedPetList = petList.filter((pet) => pet.petId !== petId);\n    setPetList(updatedPetList);\n  };\n\n  const handleFindFood = (pet) => {\n    // handle finding food for pet\n  };\n\n  const petCards = petList.map((pet, index) => (\n    <Col md={6} key={index} style={{ marginBottom: \"1rem\" }}>\n      <PetCard\n        pet={pet}\n        handleDeletePet={handleDeletePet}\n        handleFindFood={handleFindFood}\n      />\n    </Col>\n  ));\n\n  const petCardRows = [];\n  for (let i = 0; i < petCards.length; i += 2) {\n    const cardRow = (\n      <Row key={i / 2} style={{ marginBottom: \"1rem\" }}>\n        {petCards.slice(i, i + 2)}\n      </Row>\n    );\n    petCardRows.push(cardRow);\n  }\n\n  return (\n    <div>\n      <h4>Your Pets</h4>\n      <hr />\n      {petCardRows}\n      <Button onClick={handleAddPet}>Add Pet</Button>\n    </div>\n  );\n};\n\nexport default PetProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
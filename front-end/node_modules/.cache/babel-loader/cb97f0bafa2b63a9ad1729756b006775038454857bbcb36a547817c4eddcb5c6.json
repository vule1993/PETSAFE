{"ast":null,"code":"// // const initialState = {\n// //   petList: [],\n// // };\n\n// // const petReducer = (state = initialState, action) => {\n// //   switch (action.type) {\n// //     case \"ADD_PET\":\n// //       return {\n// //         ...state,\n// //         petList: [...state.petList, action.payload],\n// //       };\n// //     case \"ADD_PET_LIST\":\n// //       return {\n// //         ...state,\n// //         petList: action.payload,\n// //       };\n// //     default:\n// //       return state;\n// //   }\n// // };\n\n// // export default petReducer;\nconst initialState = {\n  petList: []\n};\nconst petReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADD_PET\":\n      return {\n        ...state,\n        petList: [...state.petList, action.payload]\n      };\n    // case \"ADD_PET_LIST\":\n    //   return {\n    //     ...state,\n    //     petList: state.petList.map((pet) => {\n    //       if (pet.petId === action.payload.petId) {\n    //         return { ...pet, vaccinationList: action.payload.vaccinationList };\n    //       }\n    //       return pet;\n    //     }),\n    //   };\n    case \"ADD_PET_LIST\":\n      return {\n        ...state,\n        petList: state.petList.map(pet => {\n          if (pet.petId === action.payload.petId) {\n            return {\n              ...pet,\n              listVaccination: action.payload.listVaccination\n            };\n          }\n          return pet;\n        })\n      };\n    case \"ADD_VACCINATION\":\n      return {\n        ...state,\n        petList: state.petList.map(pet => {\n          if (pet.petId === action.payload.petId) {\n            const updatedVaccinationList = [...pet.vaccinationList, action.payload.vaccination];\n            return {\n              ...pet,\n              vaccinationList: updatedVaccinationList\n            };\n          }\n          return pet;\n        })\n      };\n    default:\n      return state;\n  }\n};\nexport default petReducer;","map":{"version":3,"names":["initialState","petList","petReducer","state","arguments","length","undefined","action","type","payload","map","pet","petId","listVaccination","updatedVaccinationList","vaccinationList","vaccination"],"sources":["/Users/vule/Documents/PETSAFE/PetSafe/front-end/src/store/petReducer.js"],"sourcesContent":["// // const initialState = {\n// //   petList: [],\n// // };\n\n// // const petReducer = (state = initialState, action) => {\n// //   switch (action.type) {\n// //     case \"ADD_PET\":\n// //       return {\n// //         ...state,\n// //         petList: [...state.petList, action.payload],\n// //       };\n// //     case \"ADD_PET_LIST\":\n// //       return {\n// //         ...state,\n// //         petList: action.payload,\n// //       };\n// //     default:\n// //       return state;\n// //   }\n// // };\n\n// // export default petReducer;\nconst initialState = {\n  petList: [],\n};\n\nconst petReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_PET\":\n      return {\n        ...state,\n        petList: [...state.petList, action.payload],\n      };\n    // case \"ADD_PET_LIST\":\n    //   return {\n    //     ...state,\n    //     petList: state.petList.map((pet) => {\n    //       if (pet.petId === action.payload.petId) {\n    //         return { ...pet, vaccinationList: action.payload.vaccinationList };\n    //       }\n    //       return pet;\n    //     }),\n    //   };\n    case \"ADD_PET_LIST\":\n      return {\n        ...state,\n        petList: state.petList.map((pet) => {\n          if (pet.petId === action.payload.petId) {\n            return {\n              ...pet,\n              listVaccination: action.payload.listVaccination,\n            };\n          }\n          return pet;\n        }),\n      };\n\n    case \"ADD_VACCINATION\":\n      return {\n        ...state,\n        petList: state.petList.map((pet) => {\n          if (pet.petId === action.payload.petId) {\n            const updatedVaccinationList = [\n              ...pet.vaccinationList,\n              action.payload.vaccination,\n            ];\n            return { ...pet, vaccinationList: updatedVaccinationList };\n          }\n          return pet;\n        }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default petReducer;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,UAAU,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC9C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QACL,GAAGL,KAAK;QACRF,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAO,EAAEM,MAAM,CAACE,OAAO;MAC5C,CAAC;IACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,KAAK,cAAc;MACjB,OAAO;QACL,GAAGN,KAAK;QACRF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACS,GAAG,CAAEC,GAAG,IAAK;UAClC,IAAIA,GAAG,CAACC,KAAK,KAAKL,MAAM,CAACE,OAAO,CAACG,KAAK,EAAE;YACtC,OAAO;cACL,GAAGD,GAAG;cACNE,eAAe,EAAEN,MAAM,CAACE,OAAO,CAACI;YAClC,CAAC;UACH;UACA,OAAOF,GAAG;QACZ,CAAC;MACH,CAAC;IAEH,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGR,KAAK;QACRF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACS,GAAG,CAAEC,GAAG,IAAK;UAClC,IAAIA,GAAG,CAACC,KAAK,KAAKL,MAAM,CAACE,OAAO,CAACG,KAAK,EAAE;YACtC,MAAME,sBAAsB,GAAG,CAC7B,GAAGH,GAAG,CAACI,eAAe,EACtBR,MAAM,CAACE,OAAO,CAACO,WAAW,CAC3B;YACD,OAAO;cAAE,GAAGL,GAAG;cAAEI,eAAe,EAAED;YAAuB,CAAC;UAC5D;UACA,OAAOH,GAAG;QACZ,CAAC;MACH,CAAC;IACH;MACE,OAAOR,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"; //is used to pipeline the dispatched objects and give us a feeling of sync execution by being async\nimport { userReducer } from \"./userReducer\";\nimport { searchReducer } from \"./searchReducer\";\nimport petReducer from \"./petReducer\";\nimport petVaccinationReducer from \"./petVaccinationReducer\";\nconst rootReducer = combineReducers({\n  user: userReducer,\n  searchResult: searchReducer,\n  petReducer: petReducer,\n  petVaccinationReducer: petVaccinationReducer\n});\nconst logger = () => next => action => {\n  console.log(\"action logger store \", action);\n  next(action);\n};\nexport default configureStore({\n  reducer: rootReducer\n}, {},\n//initial state if we want to set from store instead of reducer\napplyMiddleware(thunk, logger));","map":{"version":3,"names":["configureStore","combineReducers","applyMiddleware","thunk","userReducer","searchReducer","petReducer","petVaccinationReducer","rootReducer","user","searchResult","logger","next","action","console","log","reducer"],"sources":["/Users/vule/Documents/PETSAFE/PetSafe/front-end/src/store/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"; //is used to pipeline the dispatched objects and give us a feeling of sync execution by being async\nimport { userReducer } from \"./userReducer\";\nimport { searchReducer } from \"./searchReducer\";\nimport petReducer from \"./petReducer\";\nimport petVaccinationReducer from \"./petVaccinationReducer\";\nconst rootReducer = combineReducers({\n  user: userReducer,\n  searchResult: searchReducer,\n  petReducer: petReducer,\n  petVaccinationReducer: petVaccinationReducer,\n});\nconst logger = () => (next) => (action) => {\n  console.log(\"action logger store \", action);\n  next(action);\n};\nexport default configureStore(\n  { reducer: rootReducer },\n  {}, //initial state if we want to set from store instead of reducer\n  applyMiddleware(thunk, logger)\n);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,OAAOC,KAAK,MAAM,aAAa,CAAC,CAAC;AACjC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,MAAMC,WAAW,GAAGP,eAAe,CAAC;EAClCQ,IAAI,EAAEL,WAAW;EACjBM,YAAY,EAAEL,aAAa;EAC3BC,UAAU,EAAEA,UAAU;EACtBC,qBAAqB,EAAEA;AACzB,CAAC,CAAC;AACF,MAAMI,MAAM,GAAGA,CAAA,KAAOC,IAAI,IAAMC,MAAM,IAAK;EACzCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAAC;EAC3CD,IAAI,CAACC,MAAM,CAAC;AACd,CAAC;AACD,eAAeb,cAAc,CAC3B;EAAEgB,OAAO,EAAER;AAAY,CAAC,EACxB,CAAC,CAAC;AAAE;AACJN,eAAe,CAACC,KAAK,EAAEQ,MAAM,CAAC,CAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}